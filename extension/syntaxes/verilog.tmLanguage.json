{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Verilog",
  "patterns": [
    {
      "include": "#keywords"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#comments"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#identifiers"
    }
  ],
  "repository": {
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.verilog",
          "match": "\\b(module|endmodule|input|output|inout|wire|reg|parameter|localparam|assign|always|initial|begin|end|if|else|case|casex|casez|default|endcase|for|while|repeat|forever|function|endfunction|task|endtask|generate|endgenerate)\\b"
        },
        {
          "name": "keyword.other.verilog",
          "match": "\\b(posedge|negedge|or|and|not|buf|bufif0|bufif1|notif0|notif1|nand|nor|xor|xnor)\\b"
        },
        {
          "name": "storage.type.verilog",
          "match": "\\b(integer|real|time|realtime|supply0|supply1|tri|triand|trior|trireg|tri0|tri1|uwire|wand|wor)\\b"
        }
      ]
    },
    "strings": {
      "name": "string.quoted.double.verilog",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.verilog",
          "match": "\\\\."
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.verilog",
          "begin": "//",
          "end": "$"
        },
        {
          "name": "comment.block.verilog",
          "begin": "/\\*",
          "end": "\\*/"
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.verilog",
          "match": "\\b\\d+[']([bB][01_]+|[oO][0-7_]+|[dD][0-9_]+|[hH][0-9a-fA-F_]+)\\b"
        },
        {
          "name": "constant.numeric.verilog",
          "match": "\\b\\d+\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.verilog",
          "match": "(\\+|\\-|\\*|\\/|%|\\*\\*|\\+\\+|\\-\\-|<<|>>|<<<|>>>|<|<=|>|>=|==|!=|===|!==|&|\\||\\^|~|&&|\\|\\||!|\\?|:)"
        }
      ]
    },
    "identifiers": {
      "patterns": [
        {
          "name": "variable.other.verilog",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
        }
      ]
    }
  },
  "scopeName": "source.verilog"
}